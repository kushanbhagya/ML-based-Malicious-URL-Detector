{"ast":null,"code":"var _jsxFileName = \"/Users/kushanbhgya/Desktop/Y4S2/IW/Assignment/Malicious_url_detection/ML-based-Malicious-URL-Detector-FE/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport Swal from 'sweetalert2';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [url, setUrl] = useState('');\n  const [result, setResult] = useState('');\n  const handleVerify = () => {\n    if (url) {\n      axios.post('http://localhost:5000/verify', {\n        url\n      }).then(response => {\n        setResult(response.data.result);\n        // Handle the result here, display messages, etc.\n        if (response.data.result === \"good\") {\n          Swal.fire({\n            icon: 'success',\n            text: `Verifying URL: ${url}`,\n            title: response.data.result\n          });\n        } else {\n          Swal.fire({\n            icon: 'warning',\n            text: `Verifying URL: ${url}`,\n            title: response.data.result\n          });\n        }\n      }).catch(error => {\n        // Handle Axios or other errors here\n        console.error(error);\n        Swal.fire({\n          icon: 'error',\n          text: 'An error occurred while verifying the URL.',\n          title: 'ERROR'\n        });\n      });\n    } else {\n      Swal.fire({\n        icon: 'warning',\n        text: 'Please enter a URL before verifying.',\n        title: 'INVALID!'\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"glitch\",\n        children: \"MalURL.ai\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter URL\",\n        value: url,\n        onChange: e => setUrl(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleVerify,\n        children: \"Verify\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"1QknUsI6EUeQ2bo5n8BOYaEr+jg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Swal","axios","jsxDEV","_jsxDEV","App","_s","url","setUrl","result","setResult","handleVerify","post","then","response","data","fire","icon","text","title","catch","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["/Users/kushanbhgya/Desktop/Y4S2/IW/Assignment/Malicious_url_detection/ML-based-Malicious-URL-Detector-FE/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './App.css';\r\nimport Swal from 'sweetalert2';\r\nimport axios from 'axios';\r\n\r\nfunction App() {\r\n  const [url, setUrl] = useState('');\r\n  const [result, setResult] = useState('');\r\n\r\n  const handleVerify = () => {\r\n    if (url) {\r\n      axios\r\n        .post('http://localhost:5000/verify', { url })\r\n        .then((response) => {\r\n          setResult(response.data.result);\r\n          // Handle the result here, display messages, etc.\r\n          if (response.data.result === \"good\") {\r\n            Swal.fire({\r\n              icon: 'success',\r\n              text: `Verifying URL: ${url}`,\r\n              title: response.data.result,\r\n            });\r\n          } else {\r\n            Swal.fire({\r\n              icon: 'warning',\r\n              text: `Verifying URL: ${url}`,\r\n              title: response.data.result,\r\n            });\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          // Handle Axios or other errors here\r\n          console.error(error);\r\n          Swal.fire({\r\n            icon: 'error',\r\n            text: 'An error occurred while verifying the URL.',\r\n            title: 'ERROR',\r\n          });\r\n        });\r\n    } else {\r\n      Swal.fire({\r\n        icon: 'warning',\r\n        text: 'Please enter a URL before verifying.',\r\n        title: 'INVALID!',\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"card\">\r\n        <h1 className=\"glitch\">MalURL.ai</h1>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Enter URL\"\r\n          value={url}\r\n          onChange={(e) => setUrl(e.target.value)}\r\n        />\r\n        <button onClick={handleVerify}>Verify</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,WAAW;AAClB,OAAOC,IAAI,MAAM,aAAa;AAC9B,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,GAAG,EAAEC,MAAM,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAClC,MAAM,CAACS,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAExC,MAAMW,YAAY,GAAGA,CAAA,KAAM;IACzB,IAAIJ,GAAG,EAAE;MACPL,KAAK,CACFU,IAAI,CAAC,8BAA8B,EAAE;QAAEL;MAAI,CAAC,CAAC,CAC7CM,IAAI,CAAEC,QAAQ,IAAK;QAClBJ,SAAS,CAACI,QAAQ,CAACC,IAAI,CAACN,MAAM,CAAC;QAC/B;QACA,IAAIK,QAAQ,CAACC,IAAI,CAACN,MAAM,KAAK,MAAM,EAAE;UACnCR,IAAI,CAACe,IAAI,CAAC;YACRC,IAAI,EAAE,SAAS;YACfC,IAAI,EAAG,kBAAiBX,GAAI,EAAC;YAC7BY,KAAK,EAAEL,QAAQ,CAACC,IAAI,CAACN;UACvB,CAAC,CAAC;QACJ,CAAC,MAAM;UACLR,IAAI,CAACe,IAAI,CAAC;YACRC,IAAI,EAAE,SAAS;YACfC,IAAI,EAAG,kBAAiBX,GAAI,EAAC;YAC7BY,KAAK,EAAEL,QAAQ,CAACC,IAAI,CAACN;UACvB,CAAC,CAAC;QACJ;MACF,CAAC,CAAC,CACDW,KAAK,CAAEC,KAAK,IAAK;QAChB;QACAC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;QACpBpB,IAAI,CAACe,IAAI,CAAC;UACRC,IAAI,EAAE,OAAO;UACbC,IAAI,EAAE,4CAA4C;UAClDC,KAAK,EAAE;QACT,CAAC,CAAC;MACJ,CAAC,CAAC;IACN,CAAC,MAAM;MACLlB,IAAI,CAACe,IAAI,CAAC;QACRC,IAAI,EAAE,SAAS;QACfC,IAAI,EAAE,sCAAsC;QAC5CC,KAAK,EAAE;MACT,CAAC,CAAC;IACJ;EACF,CAAC;EAED,oBACEf,OAAA;IAAKmB,SAAS,EAAC,WAAW;IAAAC,QAAA,eACxBpB,OAAA;MAAKmB,SAAS,EAAC,MAAM;MAAAC,QAAA,gBACnBpB,OAAA;QAAImB,SAAS,EAAC,QAAQ;QAAAC,QAAA,EAAC;MAAS;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACrCxB,OAAA;QACEyB,IAAI,EAAC,MAAM;QACXC,WAAW,EAAC,WAAW;QACvBC,KAAK,EAAExB,GAAI;QACXyB,QAAQ,EAAGC,CAAC,IAAKzB,MAAM,CAACyB,CAAC,CAACC,MAAM,CAACH,KAAK;MAAE;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzC,CAAC,eACFxB,OAAA;QAAQ+B,OAAO,EAAExB,YAAa;QAAAa,QAAA,EAAC;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3C;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACtB,EAAA,CAzDQD,GAAG;AAAA+B,EAAA,GAAH/B,GAAG;AA2DZ,eAAeA,GAAG;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}